% == tabular Formatting ==

\begin{tabular}[t]{c|c|c|lc}
% [t] : {t,c,b} : align the surrounding line to the top, center, or bottom of table if it is inline
% {l|r|cccc}
%    - One letter per column
%    - Each letter {l,c,r} represents left, center, right alignment
%    - Pipes | between columns will draw a vertical line between those columns
%    - \hline at the end of a line draws a horizontal line under that column
%    - \cline{N-M} is similar to \hline but only spans some of the columns

% Define a new macro to put bottom padding for cell, use '\B'
\newcommand\B{\rule[-2ex]{0pt}{0pt}} 

% Stretch out the rows of just this table
{\renewcommand{\arraystretch}{1.9}
\begin{tabular} ...
\end{tabular}
} % You have to close 'renewcommand'

\cline{1-4} % A horizontal line across columns 1 through 4 only

% == End Tabular ==

% Create a figure space for specialized formatting and place it inline with text
\begin{figure}[h] % place the figure in sequence with text [here]
\centering % center the figure on the page, independent of surrounding formatting
\end{figure}

% multiple lines within a table cell
\vtop{\hbox{\strut $ Q(1,1) = \dfrac{(93+95+94)}{3.0} $ }\hbox{ \strut $=  94 $ }} &

% insert some horizontal space in a line
\hspace{5 em} % 'em' or any other recognized unit

$\ $ \\ % force an "empty" line

\newpage % page break

% Elements of an inline equation are in the big style
$\displaystyle <EQUATION> $

% Put a box around your answer
$\displaystyle EQUATION = \boxed{ANS} $
\boxed{\text{False}} % Also works outside of equation, have to use, but contents are equation style
                     %unless you negate it with '\text{}'

% Put a box around a bunch of stuff
\fbox{ <A BUNCH OF STUFF> }

% Two tables side by side, insert a spacing to override the default newline
\begin{tabular} ... \end{tabular}
\quad % The spacing that I choose over the default separation
\begin{tabular} ... \end{tabular}

\texttt{ monospace text } % monospace text inline with regular text

% Checklists , To-Do Lists
\usepackage{wasysym}
$\Square$ , $\CheckedBox$ , $\XBox$

% == Color Formatting ==

\usepackage{xcolor}
% Prefined: red, green, blue, cyan, magenta, yellow, black, gray, white, darkgray, lightgray, brown, lime, olive, orange, 
%           pink, purple, teal, violet  ~~~~ Or define your own color names:
\definecolor{darkgreen}{rgb}{ 0.28 , 0.6 , 0.28 } % Must be expressed in decimal fractions
\textcolor{darkgreen}{YOUR TEXT HERE}

% == End Color ==
